version: 2.1
workflows:
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - stable:
          requires:
            - build
          filters:
            branches:
              only:
                - stable
      - version_prs:
          requires:
            - deploy
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
commands:
  setup_github_pr:
    description: "Sets up repo for submitting PRs"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "2a:d0:2a:b6:84:11:a9:0a:09:a0:59:f7:0c:72:2d:6d"
      - run:
          name: Configure storyscript infra account
          command: |
            git config --global user.name "Storyscript Infrastructure"
            git config --global user.email infra@storyscript.io
      - run:
          name: Install GitHub hub client
          command: |
            wget https://github.com/github/hub/releases/download/v2.12.3/hub-linux-amd64-2.12.3.tgz
            tar xfz hub-linux-amd64-2.12.3.tgz
            mv hub-linux-amd64-2.12.3 hub-linux-amd64
executors:
  python-default:
    docker:
      - image: circleci/python:3.7
jobs:
    build:
        executor: python-default
        steps:
            - checkout
            #- restore_cache:
                #keys:
                    #- v1-dependencies-{{ checksum "setup.py" }}
                    #- v1-dependencies-

            - run:
                name: install dependencies
                command: |
                    python3 -m venv venv
                    . venv/bin/activate
                    python3 setup.py install
                    pip install tox
                    storyscript --version

            #- save_cache:
                #paths:
                    #- ./venv
                #key: v1-dependencies-{{ checksum "setup.py" }}

            - run:
                name: run pep8 linter
                command: |
                    . venv/bin/activate
                    tox -e pep8

            - run:
                name: run black stylecheck
                command: |
                    . venv/bin/activate
                    tox -e stylecheck

            - run:
                name: run unit tests
                command: |
                    . venv/bin/activate
                    tox -e unit

            - run:
                name: collect unit coverage
                command: |
                    bash <(curl -s https://codecov.io/bash) -F unittests -f unittest.xml

            - run:
                name: run integration tests
                command: |
                    . venv/bin/activate
                    tox -e integration

            - run:
                name: collect integration coverage
                command: |
                    bash <(curl -s https://codecov.io/bash) -F integration -f integration.xml

            - store_artifacts:
                path: test-reports
                destination: test-reports
    deploy:
        executor: python-default
        steps:
            - checkout
            - run:
                  name: install dependencies
                  command: |
                    python3 -m venv venv
                    . venv/bin/activate
                    python setup.py install
            - run:
                  name: init .pypirc
                  command: |
                    echo -e "[pypi]" >> ~/.pypirc
                    echo -e "username = ${PYPI_USER}" >> ~/.pypirc
                    echo -e "password = ${PYPI_PASSWORD}" >> ~/.pypirc
            - run:
                  name: upload to PyPI
                  command: |
                    pip install twine==1.13.0
                    pip install wheel
                    . venv/bin/activate
                    python setup.py upload
    stable:
        executor: python-default
        steps:
            - checkout
            - setup_github_pr
            - run:
                name: Add upstream branch
                command: |
                  git remote add upstream "${CIRCLE_REPOSITORY_URL}"
            - run:
                name: Create PR to master (with stable fixes)
                command: |
                  export HUB="$PWD/hub-linux-amd64/bin/hub"
                  # disable automatic merge commit message editing
                  export GIT_MERGE_AUTOEDIT=no
                  # Run merge script
                  FORCE_PUSH=1 INTERACTIVE=0 CHECKOUT_WITH_MERGE=0 ./scripts/merge_stable
    version_prs:
        executor: python-default
        steps:
            - checkout
            - setup_github_pr
            - run:
                name: Create upgrade PRs
                command: |
                  export HUB="$PWD/hub-linux-amd64/bin/hub"
                  # Run merge script
                  ./scripts/bump_versions
